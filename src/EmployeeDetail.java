
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import net.coobird.thumbnailator.Thumbnails;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Harsh
 */
public class EmployeeDetail extends javax.swing.JFrame {

    /**
     * Creates new form EmployeeDetail
     * This constructors below initializes connection object by calling method in MySqlConnect class and the method name is 
     * connectDB() then the temp radio button temp is set visible false because we want either male or female
     * to be selected and to over come this we set a temp radio button so that when we press the clear button then 
     * temp radio button is  selected.
     */
    public EmployeeDetail() {
        initComponents();
        
         this.setLocationRelativeTo(null);
         conn = MySqlConnect.connectDB();
         rbtnTemp.setVisible(false);
         String updateTabelesql = "SELECT * FROM employeeinfo";
         updateTableData(updateTabelesql);
         txtSearch.getDocument().addDocumentListener(new DocumentListener(){
            @Override
            public void insertUpdate(DocumentEvent e) {
                searchFilter();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                searchFilter();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {}
            
        });
    }

    
    private void searchFilter(){
        key = txtSearch.getText();
        String updateTablesql;
        if(!key.equals(""))
            updateTablesql = "SELECT * FROM employeeinfo where empname like '%" + key +"%'";
        else
            updateTablesql =" SELECT * FROM employeeinfo";
        updateTableData(updateTablesql);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroupgender = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        lblEmpId = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        lblBloodGroup = new javax.swing.JLabel();
        lblContactNo = new javax.swing.JLabel();
        lblQualification = new javax.swing.JLabel();
        lblDOJ = new javax.swing.JLabel();
        txtEmpId = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        rbtnMale = new javax.swing.JRadioButton();
        rbtnFemale = new javax.swing.JRadioButton();
        txtAge = new javax.swing.JTextField();
        txtContactNo = new javax.swing.JTextField();
        jcbBloodGroup = new javax.swing.JComboBox<>();
        jcbQualification = new javax.swing.JComboBox<>();
        jdcDate = new com.toedter.calendar.JDateChooser();
        lblAddress = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAddress = new javax.swing.JTextArea();
        lblImagePath = new javax.swing.JLabel();
        txtImagePath = new javax.swing.JTextField();
        btnUploadImage = new javax.swing.JButton();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        lblImage = new javax.swing.JLabel();
        rbtnTemp = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnPrint = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtbData = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblEmpId.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lblEmpId.setText("Employee ID");

        lblName.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lblName.setText("Name");

        lblGender.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lblGender.setText("Gender");

        lblAge.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lblAge.setText("Age");

        lblBloodGroup.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lblBloodGroup.setText("Blood Group");

        lblContactNo.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lblContactNo.setText("Contact No");

        lblQualification.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lblQualification.setText("Qualification");

        lblDOJ.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lblDOJ.setText("DOJ");

        txtEmpId.setNextFocusableComponent(txtName);
        txtEmpId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmpIdActionPerformed(evt);
            }
        });

        txtName.setNextFocusableComponent(rbtnMale);

        btnGroupgender.add(rbtnMale);
        rbtnMale.setText("Male");
        rbtnMale.setNextFocusableComponent(rbtnFemale);
        rbtnMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnMaleActionPerformed(evt);
            }
        });

        btnGroupgender.add(rbtnFemale);
        rbtnFemale.setText("Female");
        rbtnFemale.setNextFocusableComponent(txtAge);
        rbtnFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnFemaleActionPerformed(evt);
            }
        });

        txtAge.setNextFocusableComponent(jcbBloodGroup);

        txtContactNo.setNextFocusableComponent(jcbQualification);

        jcbBloodGroup.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A+", "A-", "B+", "B-", "AB+", "AB-", "O+", "O-" }));
        jcbBloodGroup.setSelectedIndex(-1);
        jcbBloodGroup.setNextFocusableComponent(txtContactNo);
        jcbBloodGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbBloodGroupActionPerformed(evt);
            }
        });

        jcbQualification.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BTech", "MBA", "CA", "CS", "Bcom", "BBI" }));
        jcbQualification.setSelectedIndex(-1);
        jcbQualification.setNextFocusableComponent(jdcDate);

        jdcDate.setNextFocusableComponent(txtAddress);

        lblAddress.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lblAddress.setText("Address");

        txtAddress.setColumns(20);
        txtAddress.setRows(5);
        txtAddress.setNextFocusableComponent(btnUploadImage);
        jScrollPane1.setViewportView(txtAddress);

        lblImagePath.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lblImagePath.setText("Image Path");

        txtImagePath.setNextFocusableComponent(txtSearch);

        btnUploadImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/image upload.png"))); // NOI18N
        btnUploadImage.setText("Upload Image");
        btnUploadImage.setNextFocusableComponent(txtImagePath);
        btnUploadImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadImageActionPerformed(evt);
            }
        });

        jDesktopPane1.setBackground(new java.awt.Color(102, 102, 102));

        lblImage.setBackground(new java.awt.Color(255, 255, 255));
        lblImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImage.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));

        jDesktopPane1.setLayer(lblImage, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblImage, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnGroupgender.add(rbtnTemp);
        rbtnTemp.setText("Temp");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEmpId)
                            .addComponent(lblName)
                            .addComponent(lblGender)
                            .addComponent(lblAge))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEmpId)
                            .addComponent(txtName)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(rbtnMale, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                                .addComponent(rbtnFemale))
                            .addComponent(txtAge)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBloodGroup)
                            .addComponent(lblContactNo))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtContactNo)
                            .addComponent(jcbBloodGroup, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblQualification)
                            .addComponent(lblDOJ))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcbQualification, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jdcDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblImagePath)
                        .addGap(18, 18, 18)
                        .addComponent(txtImagePath, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAddress)
                            .addComponent(rbtnTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnUploadImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))))
                .addGap(18, 18, 18)
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblEmpId)
                                    .addComponent(txtEmpId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblAddress))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblName)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblGender)
                                    .addComponent(rbtnMale, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rbtnFemale, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rbtnTemp))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblAge)
                                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblBloodGroup)
                                    .addComponent(jcbBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblContactNo)
                                    .addComponent(txtContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jcbQualification, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblQualification, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnUploadImage, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDOJ)
                                    .addComponent(jdcDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(53, 53, 53))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtImagePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblImagePath))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/new-icon.png"))); // NOI18N
        btnNew.setText("New");
        btnNew.setNextFocusableComponent(btnSave);
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Save-icon.png"))); // NOI18N
        btnSave.setText("Save");
        btnSave.setNextFocusableComponent(btnUpdate);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update.png"))); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.setNextFocusableComponent(btnDelete);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.setNextFocusableComponent(btnClear);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/clear.png"))); // NOI18N
        btnClear.setText("Clear");
        btnClear.setNextFocusableComponent(jtbData);
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jLabel2.setText("Search");

        txtSearch.setNextFocusableComponent(btnNew);

        btnPrint.setText("Print");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNew)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPrint)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNew)
                    .addComponent(btnSave)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnClear)
                    .addComponent(jLabel2)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrint))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.add(jPanel5);

        jtbData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtbData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbDataMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtbData);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 13, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(14, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 116, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtEmpIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmpIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmpIdActionPerformed
    
    
    /*
     The below method is of uplooad button JFileChooser class object is initialized in the local method 
    it is same as Dialog box in java there is a method in JFileChooser i.e showOpenDialog(Component parent)
    which pops up and Open File chooser to open a file it accepts an parent component object and it also have another dialog box 
    method to open the save option i.e showSaveDialog(Component parent);
    A File object is created to get the selected file from the open dialog box then it is checked if no sourceFile is selected
    i.e if the sourceFile is not null then the file path from the sourceFile is stored into an String filePath and hence 
    absolutepath is stored then the image path is setted which was stored in filepath 
    Then a new File object is created named image and String is passed in its constructor where the abolute path is stored
    an BufferedImage abject thumbnail is also created which has a class Thumbnails method of Indicate to make thumbnails 
    from the specified file or image given in parameters then a method size which accepts width and height in thumbnails 
    which resizes the image into the specified thumbnail and then it is then converted into BufferedImage by asBufferedImage()
    Then ByteArrayOutputStream object is created os  to store the byre array of the image and them to store into the databasse
    ImageIO class is used to write the image which accepts 'which image' , 'which type' and 'where to store'
    A  private byteImage variable of byte array is creted and then os is converted to byte array
    then the image is set with ImageIcom
    THUMBNAIL CAME FROM THE THUMB.JAR FILE WHICH WAS ADDED INTO THE LIBRARY
    */
    private void btnUploadImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadImageActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showOpenDialog(null);
        File sourceFile = fileChooser.getSelectedFile();
        if(sourceFile != null){
            filePath = sourceFile.getAbsolutePath();
            txtImagePath.setText(filePath);
            try {
                File image = new File(filePath);
                BufferedImage thumbnail = Thumbnails.of(sourceFile).size(180,200).asBufferedImage();
                ByteArrayOutputStream os =new ByteArrayOutputStream();
                ImageIO.write(thumbnail, "jpg", os);
                
                byteImage = os.toByteArray();
                
                //byteImage = Files.readAllBytes(sourceFile.toPath());
            
                viewImage = new ImageIcon(thumbnail);
                lblImage.setIcon(viewImage);
            
            }catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Issue : "+e);
            }
        }
        
    }//GEN-LAST:event_btnUploadImageActionPerformed

    private void jcbBloodGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbBloodGroupActionPerformed
        
    }//GEN-LAST:event_jcbBloodGroupActionPerformed
    /*
        The below 2 method toggles the gender varible constants
    */
    private void rbtnMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnMaleActionPerformed
        gender = "Male";
    }//GEN-LAST:event_rbtnMaleActionPerformed

    private void rbtnFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnFemaleActionPerformed
        gender = "Female";
    }//GEN-LAST:event_rbtnFemaleActionPerformed
    /*
        The below method saves the contents written in to the database an sql command is created to insert into data base
        then connection is prepared. A method setString which Sets the designated parameter to the given Java String value in
        database then date is then retrived with SimpleDateFormat class which accpets in which format we wan("yyyy-MM-dd");
        M is wriiten in caps because small 'm' is minutes in hour then format is setted which accepts the date object 
        Then the preparedStatement is executed and updateTableData():which updates the
        data in the data base and clearFields():which clear all the content, methods are called
    */
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
            String sql = "INSERT INTO employeeinfo( empname, gender, age, bloodgroup, contactno, qualification, doj, address, empimage) VALUES (?, ? ,? ,? ,? , ? , ?, ? , ? )";
            preparedStatement = conn.prepareStatement(sql);
            
            preparedStatement.setString(1, txtName.getText());
            preparedStatement.setString(2, gender);
            preparedStatement.setString(3, txtAge.getText());
            preparedStatement.setString(4, jcbBloodGroup.getSelectedItem().toString());
            preparedStatement.setString(5, txtContactNo.getText());
            preparedStatement.setString(6, jcbQualification.getSelectedItem().toString());
            
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String strDate = sdf.format(jdcDate.getDate());
            
            preparedStatement.setString(7,strDate );
            preparedStatement.setString(8, txtAddress.getText());
            preparedStatement.setBytes(9, byteImage);
            
            boolean stmt =preparedStatement.execute();
            JOptionPane.showMessageDialog(null, "Inserted Successfully!");
           String updateTabelsql = "SELECT * FROM employeeinfo";
            updateTableData(updateTabelsql);
            clearFields();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Issue: "+e);
        }
        
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        
        clearFields();
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearFields();
       
    }//GEN-LAST:event_btnClearActionPerformed
    /*
     This method is for the table an mouse clicked event is generated when we click the table, we stored the selectedRow from
    the table into an int variable using getSelectedRow() then table has a methoch getModel which Returns the TableModel that
    provides the data displayed by this JTable. and then using that TableModel object we called the getValueAt() which
    returns the value for the cell at columnIndex and rowIndex. and then we stored it inot String
     Sql qurrey is created to get the data from the database using empid as empid is primary then everthing is setted
    using setters method for each for image please scroll down
    */
    private void jtbDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbDataMouseClicked
        int selectedRow = jtbData.getSelectedRow();
        String selectedEmpId = jtbData.getModel().getValueAt(selectedRow, 0).toString();
        try {
            String sql = "SELECT * FROM employeeinfo WHERE empid = "+selectedEmpId;
            preparedStatement = conn.prepareStatement(sql);
            rs = preparedStatement.executeQuery();
            if(rs.next()){
                txtEmpId.setText(rs.getString("empid"));
                txtName.setText(rs.getString("empname"));
                txtAddress.setText(rs.getString("address"));
                txtAge.setText(rs.getString("age"));
                txtContactNo.setText(rs.getString("contactno"));
                
                String genderSelected = rs.getString("gender");
                if("Male".equals(genderSelected)){
                    gender = "Male";
                    rbtnMale.setSelected(true);
                }
                        
                else if("Female".equals(genderSelected)){
                    gender ="Female";
                    rbtnFemale.setSelected(true);
                }
                    
                
                jcbQualification.setSelectedItem(rs.getString("qualification"));
                jcbBloodGroup.setSelectedItem(rs.getString("bloodgroup"));

                String dateValue = rs.getString("doj");
                Date date = new SimpleDateFormat("yyyy-MM-dd").parse(dateValue);
                jdcDate.setDate(date);

                byte[] selecetedImageData = rs.getBytes("empimage");
                
                /*Saving to my class variable so that while updating if the image is not change then too it will
                take the old image*/
                byteImage = selecetedImageData;
                
/**********************************************************************************************************************
 * ******************************************SPECIAL LINES OF CODE********************************************
 * ************************************************************************************************************
 */

                BufferedImage img = Thumbnails.of(ImageIO.read(new ByteArrayInputStream(selecetedImageData))).size(180, 200).asBufferedImage();
                ImageIcon i = new ImageIcon(img);
                //ImageIcon i = new ImageIcon(selectedImageData);
           /*If you remove the above lines from comment then please add comment to the above two lines*/
/**********************************************************************************************************************
 * ******************************************SPECIAL LINES OF CODE********************************************
 * ************************************************************************************************************
 */                

                lblImage.setIcon(i);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Issue : "+e);
        }
    }//GEN-LAST:event_jtbDataMouseClicked

    /*
     The below methods updates the table in the sql using update query everything is setted in the table using setString 
    or any suitable setted and the value is given with the help of suitable getters
    */
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try {
           String sql = "UPDATE employeeinfo SET empname = ?, gender = ?, age = ?, bloodgroup = ?, contactno = ?, qualification = ?, doj = ?, address = ?,empimage = ? WHERE empid = ?";
            preparedStatement = conn.prepareStatement(sql);
            
            preparedStatement.setString(1, txtName.getText());
            preparedStatement.setString(2, gender);
            preparedStatement.setString(3, txtAge.getText());
            preparedStatement.setString(4, jcbBloodGroup.getSelectedItem().toString());
            preparedStatement.setString(5, txtContactNo.getText());
            preparedStatement.setString(6, jcbQualification.getSelectedItem().toString());
            
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String strDate = sdf.format(jdcDate.getDate());
            
            preparedStatement.setString(7,strDate );
            preparedStatement.setString(8, txtAddress.getText());
            preparedStatement.setBytes(9, byteImage);
            preparedStatement.setInt(10, Integer.parseInt(txtEmpId.getText()));
            
            preparedStatement.execute();
            JOptionPane.showMessageDialog(null , "Record Updated Successfully!");
            String updateTabelsql = "SELECT * FROM employeeinfo";
            updateTableData(updateTabelsql);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null , "ISSUE : "+e);
        }
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if(txtEmpId.getText().equals("")){
            JOptionPane.showMessageDialog(null , "Please Select Record To Delete!");
        }else{
            int btn = JOptionPane.showConfirmDialog(null, "Do you really want to delete record?", "Delete ",JOptionPane.YES_NO_OPTION);
            if(btn == JOptionPane.YES_OPTION){
                try {
                    String sql = "DELETE FROM employeeinfo WHERE empid = ?";
                    preparedStatement = conn.prepareStatement(sql);
                    preparedStatement.setString(1, txtEmpId.getText());
                    preparedStatement.execute();
                    JOptionPane.showMessageDialog(null, "Record Deleted Successfully");
                    clearFields();
                     String updateTabelesql = "SELECT * FROM employeeinfo";
                    updateTableData(updateTabelesql);
                } catch (Exception e) {
                     JOptionPane.showMessageDialog(null , "Delete ISSUE : "+e.getMessage());
                }finally{
                    try {
                        preparedStatement.close();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null , "ISSUE : "+e);
                    }
                }
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        MessageFormat header = new MessageFormat("Employee List Report Print ");
        MessageFormat footer = new MessageFormat("Page {0,number , integer}");
        try {
            jtbData.print(JTable.PrintMode.FIT_WIDTH,header , footer);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Some issue in printing : "+e.getMessage());
        }
    }//GEN-LAST:event_btnPrintActionPerformed
   /*
    This method shows everything inside the database an preparedStatemrnt is executed and a Select qurey is passed 
    In the JTable setModel method is there which sets the value inside the table from the database.
    parameter passed in it DbUtils is from the package which was added into library rs2xml.jar file which converts 
    the rs i.e resultset into the xml tag file this is only for database use we will not get much info in the docs 
    
    */
    private void updateTableData(String sql){
        try {
           preparedStatement = conn.prepareStatement(sql);
           rs = preparedStatement.executeQuery();
           jtbData.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Issue : "+e);
            
        }finally{
            try {
                rs.close();
                preparedStatement.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Problem in closing rs or preparedStatement : "+e);
            }
        }
    }
    
    /*
        This method clear all the fields in the frame
    */
    private void clearFields(){
        txtEmpId.setText("");
        txtName.setText("");
        txtAddress.setText("");
        txtAge.setText("");
        txtName.setText("");
        txtContactNo.setText("");
        txtImagePath.setText("");
        jcbBloodGroup.setSelectedIndex(-1);
        jcbQualification.setSelectedIndex(-1);
        jdcDate.setDate(null);
        //rbtnFemale.setSelected(false);
        //rbtnMale.setSelected(false);
        rbtnTemp.setSelected(true);
        gender = null;
        lblImage.setIcon(null);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeDetail().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.ButtonGroup btnGroupgender;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUploadImage;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> jcbBloodGroup;
    private javax.swing.JComboBox<String> jcbQualification;
    private com.toedter.calendar.JDateChooser jdcDate;
    private javax.swing.JTable jtbData;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblBloodGroup;
    private javax.swing.JLabel lblContactNo;
    private javax.swing.JLabel lblDOJ;
    private javax.swing.JLabel lblEmpId;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblImagePath;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblQualification;
    private javax.swing.JRadioButton rbtnFemale;
    private javax.swing.JRadioButton rbtnMale;
    private javax.swing.JRadioButton rbtnTemp;
    private javax.swing.JTextArea txtAddress;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtContactNo;
    private javax.swing.JTextField txtEmpId;
    private javax.swing.JTextField txtImagePath;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
    private String filePath = null;
    private ImageIcon viewImage ;
    private String gender = null;
    Connection conn= null;
    ResultSet rs = null;
    PreparedStatement preparedStatement = null;
    private byte[] byteImage = null;
    private String key ="";
}
